// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'main.dart';
import 'models/resume_models.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 2996448800773476148),
      name: 'EducationDetails',
      lastPropertyId: const obx_int.IdUid(5, 3296177899163286123),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4562734370226251380),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 741230557486613260),
            name: 'institution',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2930220593734791132),
            name: 'degree',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 546353114742275498),
            name: 'year',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3296177899163286123),
            name: 'gpa',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 6423883994208048259),
      name: 'PersonalDetails',
      lastPropertyId: const obx_int.IdUid(10, 8334909648267107996),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1355802975226682858),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 9085989838317483290),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4812259889797999405),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 6423734100800830103),
            name: 'phone',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7090809348638001384),
            name: 'address',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 1164676426782122651),
            name: 'summary',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 7211466124803302569),
            name: 'linkedin',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 268323969551632460),
            name: 'github',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 6593173546883534373),
            name: 'portfolio',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 8334909648267107996),
            name: 'achievements',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 5873961934480414485),
      name: 'Skill',
      lastPropertyId: const obx_int.IdUid(3, 3243639778401776321),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 914351932012774331),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6830455441051775577),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3243639778401776321),
            name: 'level',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 4646682648640795801),
      name: 'WorkExperience',
      lastPropertyId: const obx_int.IdUid(7, 2978455506764379415),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 278206363946061149),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7018360339340778863),
            name: 'company',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6674973107882777230),
            name: 'position',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4285707127078937093),
            name: 'startDate',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8339810658517502794),
            name: 'endDate',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4517195755544918110),
            name: 'description',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 2978455506764379415),
            name: 'projectLink',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(4, 4646682648640795801),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    EducationDetails: obx_int.EntityDefinition<EducationDetails>(
        model: _entities[0],
        toOneRelations: (EducationDetails object) => [],
        toManyRelations: (EducationDetails object) => {},
        getId: (EducationDetails object) => object.id,
        setId: (EducationDetails object, int id) {
          object.id = id;
        },
        objectToFB: (EducationDetails object, fb.Builder fbb) {
          final institutionOffset = fbb.writeString(object.institution);
          final degreeOffset = fbb.writeString(object.degree);
          final yearOffset = fbb.writeString(object.year);
          final gpaOffset = fbb.writeString(object.gpa!);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, institutionOffset);
          fbb.addOffset(2, degreeOffset);
          fbb.addOffset(3, yearOffset);
          fbb.addOffset(4, gpaOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final institutionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
          final degreeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final yearParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final gpaParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final object = EducationDetails(
              institution: institutionParam,
              degree: degreeParam,
              year: yearParam,
              gpa: gpaParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    PersonalDetails: obx_int.EntityDefinition<PersonalDetails>(
        model: _entities[1],
        toOneRelations: (PersonalDetails object) => [],
        toManyRelations: (PersonalDetails object) => {},
        getId: (PersonalDetails object) => object.id,
        setId: (PersonalDetails object, int id) {
          object.id = id;
        },
        objectToFB: (PersonalDetails object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.fullName);
          final emailOffset = fbb.writeString(object.email);
          final phoneOffset = fbb.writeString(object.phone);
          final addressOffset = fbb.writeString(object.address);
          final summaryOffset = fbb.writeString(object.professionalSummary);
          final linkedinOffset = fbb.writeString(object.linkedIn);
          final githubOffset = fbb.writeString(object.github);
          final portfolioOffset = fbb.writeString(object.portfolio);
          // final achievementsOffset = fbb.writeString(object.achievements);
          fbb.startTable(11);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, emailOffset);
          fbb.addOffset(3, phoneOffset);
          fbb.addOffset(4, addressOffset);
          fbb.addOffset(5, summaryOffset);
          fbb.addOffset(6, linkedinOffset);
          fbb.addOffset(7, githubOffset);
          fbb.addOffset(8, portfolioOffset);
          // fbb.addOffset(9, achievementsOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final phoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final addressParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final summaryParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final linkedinParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 16, '');
          final githubParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 18, '');
          final portfolioParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 20, '');
          // final achievementsParam =
          //     const fb.StringReader(asciiOptimization: true)
          //         .vTableGet(buffer, rootOffset, 22, '');
          final object = PersonalDetails(
            fullName: nameParam,
            email: emailParam,
            phone: phoneParam,
            address: addressParam,
            professionalSummary: summaryParam,
            linkedIn: linkedinParam,
            github: githubParam,
            portfolio: portfolioParam,
            // achievements: achievementsParam
          )..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    Skill: obx_int.EntityDefinition<Skill>(
        model: _entities[2],
        toOneRelations: (Skill object) => [],
        toManyRelations: (Skill object) => {},
        getId: (Skill object) => object.id,
        setId: (Skill object, int id) {
          object.id = id;
        },
        objectToFB: (Skill object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final levelOffset = fbb.writeString(object.level);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, levelOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final levelParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object = Skill(name: nameParam, level: levelParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    WorkExperience: obx_int.EntityDefinition<WorkExperience>(
        model: _entities[3],
        toOneRelations: (WorkExperience object) => [],
        toManyRelations: (WorkExperience object) => {},
        getId: (WorkExperience object) => object.id,
        setId: (WorkExperience object, int id) {
          object.id = id;
        },
        objectToFB: (WorkExperience object, fb.Builder fbb) {
          final companyOffset = fbb.writeString(object.company);
          final positionOffset = fbb.writeString(object.position);
          final startDateOffset = fbb.writeString(object.startDate);
          final endDateOffset = fbb.writeString(object.endDate);
          final descriptionOffset = fbb.writeString(object.description);
          final projectLinkOffset = fbb.writeString(object.projectLink);
          fbb.startTable(8);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, companyOffset);
          fbb.addOffset(2, positionOffset);
          fbb.addOffset(3, startDateOffset);
          fbb.addOffset(4, endDateOffset);
          fbb.addOffset(5, descriptionOffset);
          fbb.addOffset(6, projectLinkOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final companyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final positionParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final startDateParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final endDateParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 14, '');
          final projectLinkParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 16, '');
          final object = WorkExperience(
              company: companyParam,
              position: positionParam,
              startDate: startDateParam,
              endDate: endDateParam,
              description: descriptionParam,
              projectLink: projectLinkParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [EducationDetails] entity fields to define ObjectBox queries.
class EducationDetails_ {
  /// see [EducationDetails.id]
  static final id =
      obx.QueryIntegerProperty<EducationDetails>(_entities[0].properties[0]);

  /// see [EducationDetails.institution]
  static final institution =
      obx.QueryStringProperty<EducationDetails>(_entities[0].properties[1]);

  /// see [EducationDetails.degree]
  static final degree =
      obx.QueryStringProperty<EducationDetails>(_entities[0].properties[2]);

  /// see [EducationDetails.year]
  static final year =
      obx.QueryStringProperty<EducationDetails>(_entities[0].properties[3]);

  /// see [EducationDetails.gpa]
  static final gpa =
      obx.QueryStringProperty<EducationDetails>(_entities[0].properties[4]);
}

/// [PersonalDetails] entity fields to define ObjectBox queries.
class PersonalDetails_ {
  /// see [PersonalDetails.id]
  static final id =
      obx.QueryIntegerProperty<PersonalDetails>(_entities[1].properties[0]);

  /// see [PersonalDetails.name]
  static final name =
      obx.QueryStringProperty<PersonalDetails>(_entities[1].properties[1]);

  /// see [PersonalDetails.email]
  static final email =
      obx.QueryStringProperty<PersonalDetails>(_entities[1].properties[2]);

  /// see [PersonalDetails.phone]
  static final phone =
      obx.QueryStringProperty<PersonalDetails>(_entities[1].properties[3]);

  /// see [PersonalDetails.address]
  static final address =
      obx.QueryStringProperty<PersonalDetails>(_entities[1].properties[4]);

  /// see [PersonalDetails.summary]
  static final summary =
      obx.QueryStringProperty<PersonalDetails>(_entities[1].properties[5]);

  /// see [PersonalDetails.linkedin]
  static final linkedin =
      obx.QueryStringProperty<PersonalDetails>(_entities[1].properties[6]);

  /// see [PersonalDetails.github]
  static final github =
      obx.QueryStringProperty<PersonalDetails>(_entities[1].properties[7]);

  /// see [PersonalDetails.portfolio]
  static final portfolio =
      obx.QueryStringProperty<PersonalDetails>(_entities[1].properties[8]);

  /// see [PersonalDetails.achievements]
  static final achievements =
      obx.QueryStringProperty<PersonalDetails>(_entities[1].properties[9]);
}

/// [Skill] entity fields to define ObjectBox queries.
class Skill_ {
  /// see [Skill.id]
  static final id = obx.QueryIntegerProperty<Skill>(_entities[2].properties[0]);

  /// see [Skill.name]
  static final name =
      obx.QueryStringProperty<Skill>(_entities[2].properties[1]);

  /// see [Skill.level]
  static final level =
      obx.QueryStringProperty<Skill>(_entities[2].properties[2]);
}

/// [WorkExperience] entity fields to define ObjectBox queries.
class WorkExperience_ {
  /// see [WorkExperience.id]
  static final id =
      obx.QueryIntegerProperty<WorkExperience>(_entities[3].properties[0]);

  /// see [WorkExperience.company]
  static final company =
      obx.QueryStringProperty<WorkExperience>(_entities[3].properties[1]);

  /// see [WorkExperience.position]
  static final position =
      obx.QueryStringProperty<WorkExperience>(_entities[3].properties[2]);

  /// see [WorkExperience.startDate]
  static final startDate =
      obx.QueryStringProperty<WorkExperience>(_entities[3].properties[3]);

  /// see [WorkExperience.endDate]
  static final endDate =
      obx.QueryStringProperty<WorkExperience>(_entities[3].properties[4]);

  /// see [WorkExperience.description]
  static final description =
      obx.QueryStringProperty<WorkExperience>(_entities[3].properties[5]);

  /// see [WorkExperience.projectLink]
  static final projectLink =
      obx.QueryStringProperty<WorkExperience>(_entities[3].properties[6]);
}
